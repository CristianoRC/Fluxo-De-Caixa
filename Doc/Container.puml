@startuml container

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml

LAYOUT_LANDSCAPE()
LAYOUT_WITH_LEGEND()

TITLE Customer Profile Center - Container

Enterprise_Boundary(boundaryEmpersa, "Empresa") {
  
    Container_Boundary(boundaryFluxoDeCaixa, "Fluxo de caixa") {
        Container(fluxoDeCaixaApi, "Fluxo de Caixa API", "ASP NET 7", "Sistema para gerenciamento de fluxo de caixa")
        Container(fluxoDeCaixaApp, "App", "JavaScript, React", "Permite usuários gerenciarem fluxo de caixa no browser")
        Container(fluxoDeCaixaReportApi, "Fluxo de Caixa - Relatório Fechamento", "ASP NET 7 / Azure Functions", "Sistema para gerar relatório de fechamento de fluxo de caixa")
        Container(fluxoDeCaixaBff, "Fluxo de Caixa BFF", "ASP NET 7", "Controla Auth e redireciona chamadas para os serviços de fluxo de caixa")

        ContainerDb(redis, "In-memory Database", "Redis", "Armazena cache e controla lock distribuído")
        ContainerDb(mongodb, "Database", "Mongo DB", "Armazena dados de fluxo de caixa para relatórios")
        ContainerDb(postgres, "Database", "PostgreSQL", "Armazena dados de fluxo de caixa")
        ContainerQueue(transactionQueue, "Fila - RabbitMQ", "Todas as transações finalizadas")
    }
    
    Container(authApi, "Auth API", "ASP NET 7", "Controla Auth e redireciona chamadas para os serviços de fluxo de caixa")
}

Container_Ext(gotenberg, "gotenberg", "Go Lang", "Sistema de renderização de HTML em PDF")
Container_Ext(blobStorage, "Blob storage Sevice", "", "Sistema que oferece armazenamento de arquivos")
Container_Ext(mailSystem, "Serviço de E-mail", "", "Sistema de envio de e-mail")
Person(pessoa, "Usuário do sistema", "Gerencia fluxo de caixa")

'API
Rel(fluxoDeCaixaApi, postgres, "Gerencia os dados no", "TCP")
Rel_U(fluxoDeCaixaApi, transactionQueue, "Enfileira todas as transações criadas", "TCP")
Rel(fluxoDeCaixaApi, redis, "Controla lock distribuído no", "TCP")

'Report API
Rel(fluxoDeCaixaReportApi, mailSystem, "Envia e-mails", "SMTP")
Rel_D(fluxoDeCaixaReportApi, transactionQueue, "Le as mensagens da fila", "TCP")
Rel(fluxoDeCaixaReportApi, mongodb, "Armazena dados para relatórios no", "TCP")
Rel(fluxoDeCaixaReportApi, blobStorage, "Armazena relatórios no", "TCP")
Rel(fluxoDeCaixaReportApi, gotenberg, "Gera arquivos PDF usando", "HTTP/JSON")

'App
Rel(fluxoDeCaixaApp, fluxoDeCaixaBff, "Faz chamadas para", "HTTP/JSON")

'BFF
Rel(fluxoDeCaixaBff, fluxoDeCaixaApi, "Faz chamadas para", "HTTP/JSON")
Rel(fluxoDeCaixaBff, fluxoDeCaixaReportApi, "Faz chamadas para", "HTTP/JSON")
Rel_D(fluxoDeCaixaBff, authApi, "Faz chamadas para buscar chave de validação do token no", "HTTP")

'Pessoa
Rel(pessoa, fluxoDeCaixaApp, "Usa o sistema", "HTTP")
Rel(mailSystem, pessoa, "Envia e-mail para")

@enduml